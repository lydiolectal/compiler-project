(define range
  (lambda (a b)
    (if (> a b)
        (quote ())
        (cons a (range (+ a 1) b)))))

(define slower-range
  (lambda (a b)
    (if (> a b)
        (quote ())
        (append (range a (- b 1)) (list b)))))

(define (nth L n)
  (if (= n 1)
      (car L)
      (nth (cdr L) (- n 1))))

(define (length L)
  (if (null? L)
      0
      (+ 1 (length (cdr L)))))

(define (sum L)
  (if (null? L)
      0
      (+ (car L) (sum (cdr L)))))


(range 1 10)
(range 10 1)
(range 1 1)
(slower-range 1 10)